version: '3'
services:

  discovery-service:
    container_name: discovery-service
    build:
      context: .
      dockerfile: discovery-service/Dockerfile
    ports:
      - "8761:8761"
    restart: always

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    environment:
      - INSIGHT_WEB_PORT=8001
    networks:
      - redis-network
    command: [ "redis-server", "--appendonly", "yes" ]

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDISINSIGHT_HOST=0.0.0.0
      - REDISINSIGHT_ACCEPT_LICENSE=true  # Accept EULA and Privacy Settings
    ports:
      - "5540:5540"
    volumes:
      - redisinsight-data:/db
    networks:
      - redis-network
    depends_on:
      - redis

  db:
    image: postgres:latest
    container_name: acc_db
    environment:
      POSTGRES_DB: acc_db
      POSTGRES_USER: acc
      POSTGRES_PASSWORD: acc
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U acc -d acc" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_acc_db
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: "acc@acc.com"
      PGADMIN_DEFAULT_PASSWORD: "acc"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
  redis-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  redisinsight-data:
    driver: local
